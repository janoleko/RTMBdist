% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/beta2.R
\name{beta2}
\alias{beta2}
\alias{dbeta2}
\alias{pbeta2}
\alias{qbeta2}
\alias{rbeta2}
\title{Reparametrised beta distribution}
\usage{
dbeta2(x, mu, phi, log = FALSE)

pbeta2(q, mu, phi)

qbeta2(p, mu, phi, lower.tail = TRUE, log.p = FALSE)

rbeta2(n, mu, phi)
}
\arguments{
\item{x, q}{vector of quantiles}

\item{mu}{mean parameter, must be in the interval from 0 to 1.}

\item{phi}{concentration parameter, must be positive.}

\item{log, log.p}{logical; if \code{TRUE}, probabilities/ densities \eqn{p} are returned as \eqn{\log(p)}.}

\item{p}{vector of probabilities}

\item{lower.tail}{logical; if \code{TRUE}, probabilities are \eqn{P[X <= x]}, otherwise, \eqn{P[X > x]}.}

\item{n}{number of observations. If \code{length(n) > 1}, the length is taken to be the number required.}
}
\value{
\code{dbeta2} gives the density, \code{pbeta2} gives the distribution function, \code{qbeta2} gives the quantile function, and \code{rbeta2} generates random deviates.
}
\description{
Density, distribution function, quantile function and random generation for
the beta distribution reparametrised in terms of mean and concentration.
}
\details{
This implementation allows for automatic differentiation with \code{RTMB}.
}
\examples{
x = rbeta2(1, 0.5, 1)
d = dbeta2(x, 0.5, 1)
p = pbeta2(x, 0.5, 1)
q = qbeta2(p, 0.5, 1)
}
